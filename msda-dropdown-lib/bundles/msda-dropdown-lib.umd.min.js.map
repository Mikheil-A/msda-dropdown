{"version":3,"sources":["ng://msda-dropdown-lib/lib/msda-dropdown-lib.service.ts","ng://msda-dropdown-lib/lib/msda-dropdown-lib.component.ts","ng://msda-dropdown-lib/lib/msda-dropdown-lib.module.ts"],"names":["MsdaDropdownLibService","Injectable","args","providedIn","MsdaDropdownLibComponent","this","dimensions","width","height","x","prototype","showSection","index","popoverElRef","nativeElement","classList","add","sectionElRefs","forEach","el","remove","i","arrowElRef","transform","backgroundElRef","style","contentElRef","ngOnInit","ngOnChanges","_this","navigationData","navItem","numberOfProducts","dropdownData","dropdownItem","products","length","console","log","ngAfterViewInit","popoverLeft","getBoundingClientRect","navItemRefs","rect","left","headerElRef","addEventListener","Component","selector","template","ViewChildren","ViewChild","static","Input","MsdaDropdownLibModule","NgModule","declarations","imports","HttpClientModule","CommonModule","exports"],"mappings":"gaAAA,IAAAA,EAAA,WAOE,SAAAA,gCALDC,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,wJAHd,GCAAC,EAAA,WA0EE,SAAAA,IAlDAC,KAAAC,WAAa,CACX,CAACC,MAAO,IAAKC,OAAQ,IAAKC,EAAG,GAC7B,CAACF,MAAO,IAAKC,OAAQ,IAAKC,EAAG,KAC7B,CAACF,MAAO,IAAKC,OAAQ,IAAKC,EAAG,MAiFjC,OA1EEL,EAAAM,UAAAC,YAAA,SAAYC,GACVP,KAAKQ,aAAaC,cAAcC,UAAUC,IAAI,QAC9CX,KAAKY,cAAcC,SAAO,SAACC,GAAM,OAAAA,EAAGL,cAAcC,UAAUK,OAAO,aAEnEf,KAAKY,cAAcC,SAAO,SAAEC,EAAIE,GAM1BT,IAAUS,GACZF,EAAGL,cAAcC,UAAUC,IAAI,aAUnCX,KAAKiB,WAAWR,cAAqB,MAAES,UAAY,cAAclB,KAAKC,WAAWM,GAAe,OAAC,mBAGjGP,KAAKmB,gBAAgBV,cAAqB,MAAES,UAAY,sBACzClB,KAAKC,WAAWM,GAAOH,EAAC,qBAC5BJ,KAAKC,WAAWM,GAAOL,MAAQF,KAAKC,WAAW,GAAGC,MAAK,mBACvDF,KAAKC,WAAWM,GAAOJ,OAASH,KAAKC,WAAW,GAAGE,OAAM,UAGpEH,KAAKmB,gBAAgBV,cAAcW,MAAMjB,OAASH,KAAKC,WAAWM,GAAOJ,OAAS,KAIlFH,KAAKqB,aAAaZ,cAAcW,MAAMlB,MAAQF,KAAKC,WAAWM,GAAOL,MAAQ,KAC7EF,KAAKqB,aAAaZ,cAAcW,MAAMjB,OAASH,KAAKC,WAAWM,GAAOJ,OAAS,KAC/EH,KAAKqB,aAAaZ,cAAcW,MAAMF,UAAY,cAAclB,KAAKC,WAAWM,GAAOH,EAAC,OAO1FL,EAAAM,UAAAiB,SAAA,aAGAvB,EAAAM,UAAAkB,YAAA,WAAA,IAAAC,EAAAxB,KACEA,KAAKyB,eAAeZ,SAAO,SAAEa,EAASV,OAChCW,EAAmB,EACvBD,EAAQE,aAAaf,SAAO,SAACgB,GAC3BF,GAAoBE,EAAaC,SAASC,UAG5CC,QAAQC,IAAIjB,EAAGW,GACfH,EAAKvB,WAAWe,GAAW,OAAuB,GAAnBW,EAAwB,QAI3D5B,EAAAM,UAAA6B,gBAAA,WAAA,IAAAV,EAAAxB,KACEA,KAAKmC,YAAcnC,KAAKQ,aAAaC,cAAc2B,wBAAwBhC,EAE3EJ,KAAKqC,YAAYxB,SAAO,SAAEa,EAASV,OAC3BsB,EAAOZ,EAAQjB,cAAc2B,wBACnCZ,EAAKvB,WAAWe,GAAW,OAAIsB,EAAKC,KAAQD,EAAKpC,MAAQ,EAAKsB,EAAKW,eAIrEnC,KAAKiB,WAAWR,cAAqB,MAAES,UAAY,cAAclB,KAAKC,WAAW,GAAW,OAAC,mBAE7FD,KAAKwC,YAAY/B,cAAcgC,iBAAiB,cAAY,WAC1DjB,EAAKhB,aAAaC,cAAcC,UAAUK,OAAO,gCArGtD2B,EAAAA,UAAS7C,KAAA,CAAC,CACT8C,SAAU,wBACVC,SAAA,gmGAMCC,EAAAA,aAAYhD,KAAA,CAAC,qCACbgD,EAAAA,aAAYhD,KAAA,CAAC,sCAEbiD,EAAAA,UAASjD,KAAA,CAAC,eAAgB,CAACkD,QAAQ,yBACnCD,EAAAA,UAASjD,KAAA,CAAC,cAAe,CAACkD,QAAQ,wBAClCD,EAAAA,UAASjD,KAAA,CAAC,aAAc,CAACkD,QAAQ,0BACjCD,EAAAA,UAASjD,KAAA,CAAC,eAAgB,CAACkD,QAAQ,6BACnCD,EAAAA,UAASjD,KAAA,CAAC,kBAAmB,CAACkD,QAAQ,4BAatCC,EAAAA,SA6EHjD,EA5GA,GCAA,IAAAkD,EAAA,WAMA,SAAAA,KASA,2BATCC,EAAAA,SAAQrD,KAAA,CAAC,CACRsD,aAAc,CAACpD,GACfqD,QAAS,CACPC,EAAAA,iBACAC,EAAAA,cAEFC,QAAS,CAACxD,OAGZkD,EAfA","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MsdaDropdownLibService {\n\n  constructor() { }\n}\n","import {AfterViewInit, Component, ElementRef, Input, OnChanges, OnInit, QueryList, ViewChild, ViewChildren} from '@angular/core';\n\n\n@Component({\n  selector: 'lib-msda-dropdown-lib',\n  templateUrl: './msda-dropdown-lib.component.html',\n  styleUrls: ['./msda-dropdown-lib.component.scss']\n})\nexport class MsdaDropdownLibComponent implements OnInit, AfterViewInit, OnChanges  {\n\n\n  @ViewChildren('navItemRef') navItemRefs: QueryList<any>;\n  @ViewChildren('sectionElRef') sectionElRefs: QueryList<any>;\n\n  @ViewChild('popoverElRef', {static: true}) popoverElRef: ElementRef;\n  @ViewChild('headerElRef', {static: true}) headerElRef: ElementRef;\n  @ViewChild('arrowElRef', {static: true}) arrowElRef: ElementRef;\n  @ViewChild('contentElRef', {static: true}) contentElRef: ElementRef;\n  @ViewChild('backgroundElRef', {static: true}) backgroundElRef: ElementRef;\n\n  popoverLeft;\n\n\n  // TODO: generate on the fly\n  dimensions = [\n    {width: 490, height: 280, x: 0},\n    {width: 390, height: 266, x: 100},\n    {width: 260, height: 296, x: 200}\n  ];\n\n\n  @Input() public navigationData;\n\n\n  showSection(index) {\n    this.popoverElRef.nativeElement.classList.add('open');\n    this.sectionElRefs.forEach(el => el.nativeElement.classList.remove('active'));\n\n    this.sectionElRefs.forEach((el, i) => {\n\n      // this.dimensions[i]['height'] = el.nativeElement.offsetHeight;\n      // this.dimensions[i]['width'] = el.nativeElement.offsetWidth;\n      // this.dimensions[index]['x'] = el.nativeElement.getBoundingClientRect().x;\n\n      if (index === i) {\n        el.nativeElement.classList.add('active');\n\n        // el.nativeElement.addEventListener('mouseleave', () => {\n        //   this.popoverElRef.nativeElement.classList.remove('open');\n        // });\n      }\n    });\n\n\n    // Position arrow\n    this.arrowElRef.nativeElement['style'].transform = `translateX(${this.dimensions[index]['arrowX']}px)rotate(45deg)`;\n\n    // Resize and position background\n    this.backgroundElRef.nativeElement['style'].transform = `\n      translateX(${this.dimensions[index].x}px)\n      scaleX(${this.dimensions[index].width / this.dimensions[0].width})\n      scaleY(${this.dimensions[index].height / this.dimensions[0].height})\n    `;\n\n    this.backgroundElRef.nativeElement.style.height = this.dimensions[index].height + 'px';\n    // this.backgroundElRef.nativeElement.style.width = this.dimensions[index].width + 'px';\n\n    // Resize and position content\n    this.contentElRef.nativeElement.style.width = this.dimensions[index].width + 'px';\n    this.contentElRef.nativeElement.style.height = this.dimensions[index].height + 'px';\n    this.contentElRef.nativeElement.style.transform = `translateX(${this.dimensions[index].x}px)`;\n  }\n\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnChanges() {\n    this.navigationData.forEach((navItem, i) => {\n      let numberOfProducts = 0;\n      navItem.dropdownData.forEach(dropdownItem => {\n        numberOfProducts += dropdownItem.products.length;\n      });\n\n      console.log(i, numberOfProducts);\n      this.dimensions[i]['height'] = numberOfProducts * 50 + 250;\n    });\n  }\n\n  ngAfterViewInit() {\n    this.popoverLeft = this.popoverElRef.nativeElement.getBoundingClientRect().x;\n\n    this.navItemRefs.forEach((navItem, i) => {\n      const rect = navItem.nativeElement.getBoundingClientRect();\n      this.dimensions[i]['arrowX'] = rect.left + (rect.width / 2) - this.popoverLeft;\n    });\n\n    // Set initial arrow position\n    this.arrowElRef.nativeElement['style'].transform = `translateX(${this.dimensions[0]['arrowX']}px)rotate(45deg)`;\n\n    this.headerElRef.nativeElement.addEventListener('mouseleave', () => {\n      this.popoverElRef.nativeElement.classList.remove('open');\n    });\n  }\n\n}\n","import {NgModule} from '@angular/core';\nimport {MsdaDropdownLibComponent} from './msda-dropdown-lib.component';\nimport {HttpClientModule} from '@angular/common/http';\nimport {CommonModule} from '@angular/common';\n\n\n@NgModule({\n  declarations: [MsdaDropdownLibComponent],\n  imports: [\n    HttpClientModule,\n    CommonModule\n  ],\n  exports: [MsdaDropdownLibComponent]\n})\nexport class MsdaDropdownLibModule {\n}\n"]}